{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\GitHub\\\\SISTEMA_DOCTOR_CONSULTORIO\\\\src\\\\components\\\\DienteSVG.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DienteSVG = ({\n  numero,\n  tipo = 'molar'\n}) => {\n  _s();\n  const [estadoCaras, setEstadoCaras] = useState({\n    oclusal: 'sano',\n    // blanco\n    vestibular: 'sano',\n    // blanco\n    lingual: 'sano',\n    // blanco\n    mesial: 'sano',\n    // blanco\n    distal: 'sano' // blanco\n  });\n  const colores = {\n    sano: '#ffffff',\n    caries: '#ef4444',\n    // rojo\n    tratado: '#3b82f6',\n    // azul\n    obturado: '#10b981',\n    // verde\n    extraido: '#6b7280' // gris\n  };\n  const handleCaraClick = cara => {\n    const estados = ['sano', 'caries', 'tratado', 'obturado', 'extraido'];\n    const estadoActual = estadoCaras[cara];\n    const indiceActual = estados.indexOf(estadoActual);\n    const siguienteEstado = estados[(indiceActual + 1) % estados.length];\n    const nuevoEstado = {\n      ...estadoCaras,\n      [cara]: siguienteEstado\n    };\n    setEstadoCaras(nuevoEstado);\n\n    // Console.log para futura integración con base de datos\n    console.log(`Diente ${numero} - Cara ${cara}: ${siguienteEstado}`, nuevoEstado);\n  };\n  const getSVGPaths = () => {\n    switch (tipo) {\n      case 'incisor':\n        return {\n          // Forma trapezoidal con cúspide triangular\n          oclusal: \"M10 2 L14 2 L13 4 L11 4 Z\",\n          vestibular: \"M10 2 L14 2 L14 8 L10 8 Z\",\n          lingual: \"M10 2 L14 2 L14 8 L10 8 Z\",\n          mesial: \"M10 2 L10 8 L8 8 L8 2 Z\",\n          distal: \"M14 2 L14 8 L16 8 L16 2 Z\",\n          // Líneas internas en X\n          lineas: [\"M10 2 L14 8\",\n          // Diagonal principal\n          \"M14 2 L10 8\" // Diagonal secundaria\n          ]\n        };\n      case 'canino':\n        return {\n          // Forma trapezoidal más pronunciada\n          oclusal: \"M9 2 L15 2 L14 4 L10 4 Z\",\n          vestibular: \"M9 2 L15 2 L15 9 L9 9 Z\",\n          lingual: \"M9 2 L15 2 L15 9 L9 9 Z\",\n          mesial: \"M9 2 L9 9 L7 9 L7 2 Z\",\n          distal: \"M15 2 L15 9 L17 9 L17 2 Z\",\n          // Líneas internas en X\n          lineas: [\"M9 2 L15 9\", \"M15 2 L9 9\"]\n        };\n      case 'premolar':\n        return {\n          // Forma rectangular con división horizontal\n          oclusal: \"M8 2 L16 2 L16 4 L8 4 Z\",\n          vestibular: \"M8 2 L16 2 L16 9 L8 9 Z\",\n          lingual: \"M8 2 L16 2 L16 9 L8 9 Z\",\n          mesial: \"M8 2 L8 9 L6 9 L6 2 Z\",\n          distal: \"M16 2 L16 9 L18 9 L18 2 Z\",\n          // Línea horizontal divisoria\n          lineas: [\"M8 5 L16 5\"]\n        };\n      case 'molar':\n      default:\n        return {\n          // Forma cuadrada con grid 2x2\n          oclusal: \"M7 2 L17 2 L17 4 L7 4 Z\",\n          vestibular: \"M7 2 L17 2 L17 10 L7 10 Z\",\n          lingual: \"M7 2 L17 2 L17 10 L7 10 Z\",\n          mesial: \"M7 2 L7 10 L5 10 L5 2 Z\",\n          distal: \"M17 2 L17 10 L19 10 L19 2 Z\",\n          // Grid 2x2 interno\n          lineas: [\"M7 4 L17 4\",\n          // Línea horizontal superior\n          \"M7 6 L17 6\",\n          // Línea horizontal inferior\n          \"M12 2 L12 4\",\n          // Línea vertical izquierda\n          \"M12 2 L12 4\" // Línea vertical derecha\n          ]\n        };\n    }\n  };\n  const paths = getSVGPaths();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"28\",\n      height: \"36\",\n      viewBox: \"0 0 28 36\",\n      className: \"cursor-pointer\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: paths.oclusal,\n        fill: colores[estadoCaras.oclusal],\n        stroke: \"#000000\",\n        strokeWidth: \"0.5\",\n        onClick: () => handleCaraClick('oclusal'),\n        className: \"hover:opacity-80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: paths.vestibular,\n        fill: colores[estadoCaras.vestibular],\n        stroke: \"#000000\",\n        strokeWidth: \"0.5\",\n        onClick: () => handleCaraClick('vestibular'),\n        className: \"hover:opacity-80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: paths.lingual,\n        fill: colores[estadoCaras.lingual],\n        stroke: \"#000000\",\n        strokeWidth: \"0.5\",\n        onClick: () => handleCaraClick('lingual'),\n        className: \"hover:opacity-80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: paths.mesial,\n        fill: colores[estadoCaras.mesial],\n        stroke: \"#000000\",\n        strokeWidth: \"0.5\",\n        onClick: () => handleCaraClick('mesial'),\n        className: \"hover:opacity-80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: paths.distal,\n        fill: colores[estadoCaras.distal],\n        stroke: \"#000000\",\n        strokeWidth: \"0.5\",\n        onClick: () => handleCaraClick('distal'),\n        className: \"hover:opacity-80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-xs font-medium text-gray-700 mt-1\",\n      children: numero\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(DienteSVG, \"ilJeDnBwkop8u2p9f1uTd/zwfNs=\");\n_c = DienteSVG;\nexport default DienteSVG;\nvar _c;\n$RefreshReg$(_c, \"DienteSVG\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DienteSVG","numero","tipo","_s","estadoCaras","setEstadoCaras","oclusal","vestibular","lingual","mesial","distal","colores","sano","caries","tratado","obturado","extraido","handleCaraClick","cara","estados","estadoActual","indiceActual","indexOf","siguienteEstado","length","nuevoEstado","console","log","getSVGPaths","lineas","paths","className","children","width","height","viewBox","d","fill","stroke","strokeWidth","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/GitHub/SISTEMA_DOCTOR_CONSULTORIO/src/components/DienteSVG.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst DienteSVG = ({ numero, tipo = 'molar' }) => {\r\n  const [estadoCaras, setEstadoCaras] = useState({\r\n    oclusal: 'sano',    // blanco\r\n    vestibular: 'sano', // blanco\r\n    lingual: 'sano',    // blanco\r\n    mesial: 'sano',     // blanco\r\n    distal: 'sano'      // blanco\r\n  });\r\n\r\n  const colores = {\r\n    sano: '#ffffff',\r\n    caries: '#ef4444',    // rojo\r\n    tratado: '#3b82f6',   // azul\r\n    obturado: '#10b981',  // verde\r\n    extraido: '#6b7280'   // gris\r\n  };\r\n\r\n  const handleCaraClick = (cara) => {\r\n    const estados = ['sano', 'caries', 'tratado', 'obturado', 'extraido'];\r\n    const estadoActual = estadoCaras[cara];\r\n    const indiceActual = estados.indexOf(estadoActual);\r\n    const siguienteEstado = estados[(indiceActual + 1) % estados.length];\r\n    \r\n    const nuevoEstado = {\r\n      ...estadoCaras,\r\n      [cara]: siguienteEstado\r\n    };\r\n    \r\n    setEstadoCaras(nuevoEstado);\r\n    \r\n    // Console.log para futura integración con base de datos\r\n    console.log(`Diente ${numero} - Cara ${cara}: ${siguienteEstado}`, nuevoEstado);\r\n  };\r\n\r\n  const getSVGPaths = () => {\r\n    switch (tipo) {\r\n      case 'incisor':\r\n        return {\r\n          // Forma trapezoidal con cúspide triangular\r\n          oclusal: \"M10 2 L14 2 L13 4 L11 4 Z\",\r\n          vestibular: \"M10 2 L14 2 L14 8 L10 8 Z\",\r\n          lingual: \"M10 2 L14 2 L14 8 L10 8 Z\",\r\n          mesial: \"M10 2 L10 8 L8 8 L8 2 Z\",\r\n          distal: \"M14 2 L14 8 L16 8 L16 2 Z\",\r\n          // Líneas internas en X\r\n          lineas: [\r\n            \"M10 2 L14 8\", // Diagonal principal\r\n            \"M14 2 L10 8\"  // Diagonal secundaria\r\n          ]\r\n        };\r\n      case 'canino':\r\n        return {\r\n          // Forma trapezoidal más pronunciada\r\n          oclusal: \"M9 2 L15 2 L14 4 L10 4 Z\",\r\n          vestibular: \"M9 2 L15 2 L15 9 L9 9 Z\",\r\n          lingual: \"M9 2 L15 2 L15 9 L9 9 Z\",\r\n          mesial: \"M9 2 L9 9 L7 9 L7 2 Z\",\r\n          distal: \"M15 2 L15 9 L17 9 L17 2 Z\",\r\n          // Líneas internas en X\r\n          lineas: [\r\n            \"M9 2 L15 9\",\r\n            \"M15 2 L9 9\"\r\n          ]\r\n        };\r\n      case 'premolar':\r\n        return {\r\n          // Forma rectangular con división horizontal\r\n          oclusal: \"M8 2 L16 2 L16 4 L8 4 Z\",\r\n          vestibular: \"M8 2 L16 2 L16 9 L8 9 Z\",\r\n          lingual: \"M8 2 L16 2 L16 9 L8 9 Z\",\r\n          mesial: \"M8 2 L8 9 L6 9 L6 2 Z\",\r\n          distal: \"M16 2 L16 9 L18 9 L18 2 Z\",\r\n          // Línea horizontal divisoria\r\n          lineas: [\r\n            \"M8 5 L16 5\"\r\n          ]\r\n        };\r\n      case 'molar':\r\n      default:\r\n        return {\r\n          // Forma cuadrada con grid 2x2\r\n          oclusal: \"M7 2 L17 2 L17 4 L7 4 Z\",\r\n          vestibular: \"M7 2 L17 2 L17 10 L7 10 Z\",\r\n          lingual: \"M7 2 L17 2 L17 10 L7 10 Z\",\r\n          mesial: \"M7 2 L7 10 L5 10 L5 2 Z\",\r\n          distal: \"M17 2 L17 10 L19 10 L19 2 Z\",\r\n          // Grid 2x2 interno\r\n          lineas: [\r\n            \"M7 4 L17 4\",  // Línea horizontal superior\r\n            \"M7 6 L17 6\",  // Línea horizontal inferior\r\n            \"M12 2 L12 4\", // Línea vertical izquierda\r\n            \"M12 2 L12 4\"  // Línea vertical derecha\r\n          ]\r\n        };\r\n    }\r\n  };\r\n\r\n  const paths = getSVGPaths();\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <svg width=\"28\" height=\"36\" viewBox=\"0 0 28 36\" className=\"cursor-pointer\">\r\n        {/* Oclusal/Incisal */}\r\n        <path\r\n          d={paths.oclusal}\r\n          fill={colores[estadoCaras.oclusal]}\r\n          stroke=\"#000000\"\r\n          strokeWidth=\"0.5\"\r\n          onClick={() => handleCaraClick('oclusal')}\r\n          className=\"hover:opacity-80\"\r\n        />\r\n        \r\n        {/* Vestibular */}\r\n        <path\r\n          d={paths.vestibular}\r\n          fill={colores[estadoCaras.vestibular]}\r\n          stroke=\"#000000\"\r\n          strokeWidth=\"0.5\"\r\n          onClick={() => handleCaraClick('vestibular')}\r\n          className=\"hover:opacity-80\"\r\n        />\r\n        \r\n        {/* Lingual */}\r\n        <path\r\n          d={paths.lingual}\r\n          fill={colores[estadoCaras.lingual]}\r\n          stroke=\"#000000\"\r\n          strokeWidth=\"0.5\"\r\n          onClick={() => handleCaraClick('lingual')}\r\n          className=\"hover:opacity-80\"\r\n        />\r\n        \r\n        {/* Mesial */}\r\n        <path\r\n          d={paths.mesial}\r\n          fill={colores[estadoCaras.mesial]}\r\n          stroke=\"#000000\"\r\n          strokeWidth=\"0.5\"\r\n          onClick={() => handleCaraClick('mesial')}\r\n          className=\"hover:opacity-80\"\r\n        />\r\n        \r\n        {/* Distal */}\r\n        <path\r\n          d={paths.distal}\r\n          fill={colores[estadoCaras.distal]}\r\n          stroke=\"#000000\"\r\n          strokeWidth=\"0.5\"\r\n          onClick={() => handleCaraClick('distal')}\r\n          className=\"hover:opacity-80\"\r\n        />\r\n      </svg>\r\n      <span className=\"text-xs font-medium text-gray-700 mt-1\">{numero}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DienteSVG;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC,IAAI,GAAG;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC;IAC7CS,OAAO,EAAE,MAAM;IAAK;IACpBC,UAAU,EAAE,MAAM;IAAE;IACpBC,OAAO,EAAE,MAAM;IAAK;IACpBC,MAAM,EAAE,MAAM;IAAM;IACpBC,MAAM,EAAE,MAAM,CAAM;EACtB,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAG;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IAAK;IACtBC,OAAO,EAAE,SAAS;IAAI;IACtBC,QAAQ,EAAE,SAAS;IAAG;IACtBC,QAAQ,EAAE,SAAS,CAAG;EACxB,CAAC;EAED,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAChC,MAAMC,OAAO,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;IACrE,MAAMC,YAAY,GAAGhB,WAAW,CAACc,IAAI,CAAC;IACtC,MAAMG,YAAY,GAAGF,OAAO,CAACG,OAAO,CAACF,YAAY,CAAC;IAClD,MAAMG,eAAe,GAAGJ,OAAO,CAAC,CAACE,YAAY,GAAG,CAAC,IAAIF,OAAO,CAACK,MAAM,CAAC;IAEpE,MAAMC,WAAW,GAAG;MAClB,GAAGrB,WAAW;MACd,CAACc,IAAI,GAAGK;IACV,CAAC;IAEDlB,cAAc,CAACoB,WAAW,CAAC;;IAE3B;IACAC,OAAO,CAACC,GAAG,CAAC,UAAU1B,MAAM,WAAWiB,IAAI,KAAKK,eAAe,EAAE,EAAEE,WAAW,CAAC;EACjF,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,QAAQ1B,IAAI;MACV,KAAK,SAAS;QACZ,OAAO;UACL;UACAI,OAAO,EAAE,2BAA2B;UACpCC,UAAU,EAAE,2BAA2B;UACvCC,OAAO,EAAE,2BAA2B;UACpCC,MAAM,EAAE,yBAAyB;UACjCC,MAAM,EAAE,2BAA2B;UACnC;UACAmB,MAAM,EAAE,CACN,aAAa;UAAE;UACf,aAAa,CAAE;UAAA;QAEnB,CAAC;MACH,KAAK,QAAQ;QACX,OAAO;UACL;UACAvB,OAAO,EAAE,0BAA0B;UACnCC,UAAU,EAAE,yBAAyB;UACrCC,OAAO,EAAE,yBAAyB;UAClCC,MAAM,EAAE,uBAAuB;UAC/BC,MAAM,EAAE,2BAA2B;UACnC;UACAmB,MAAM,EAAE,CACN,YAAY,EACZ,YAAY;QAEhB,CAAC;MACH,KAAK,UAAU;QACb,OAAO;UACL;UACAvB,OAAO,EAAE,yBAAyB;UAClCC,UAAU,EAAE,yBAAyB;UACrCC,OAAO,EAAE,yBAAyB;UAClCC,MAAM,EAAE,uBAAuB;UAC/BC,MAAM,EAAE,2BAA2B;UACnC;UACAmB,MAAM,EAAE,CACN,YAAY;QAEhB,CAAC;MACH,KAAK,OAAO;MACZ;QACE,OAAO;UACL;UACAvB,OAAO,EAAE,yBAAyB;UAClCC,UAAU,EAAE,2BAA2B;UACvCC,OAAO,EAAE,2BAA2B;UACpCC,MAAM,EAAE,yBAAyB;UACjCC,MAAM,EAAE,6BAA6B;UACrC;UACAmB,MAAM,EAAE,CACN,YAAY;UAAG;UACf,YAAY;UAAG;UACf,aAAa;UAAE;UACf,aAAa,CAAE;UAAA;QAEnB,CAAC;IACL;EACF,CAAC;EAED,MAAMC,KAAK,GAAGF,WAAW,CAAC,CAAC;EAE3B,oBACE7B,OAAA;IAAKgC,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACzCjC,OAAA;MAAKkC,KAAK,EAAC,IAAI;MAACC,MAAM,EAAC,IAAI;MAACC,OAAO,EAAC,WAAW;MAACJ,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAExEjC,OAAA;QACEqC,CAAC,EAAEN,KAAK,CAACxB,OAAQ;QACjB+B,IAAI,EAAE1B,OAAO,CAACP,WAAW,CAACE,OAAO,CAAE;QACnCgC,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAC,KAAK;QACjBC,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAAC,SAAS,CAAE;QAC1Cc,SAAS,EAAC;MAAkB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAGF7C,OAAA;QACEqC,CAAC,EAAEN,KAAK,CAACvB,UAAW;QACpB8B,IAAI,EAAE1B,OAAO,CAACP,WAAW,CAACG,UAAU,CAAE;QACtC+B,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAC,KAAK;QACjBC,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAAC,YAAY,CAAE;QAC7Cc,SAAS,EAAC;MAAkB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAGF7C,OAAA;QACEqC,CAAC,EAAEN,KAAK,CAACtB,OAAQ;QACjB6B,IAAI,EAAE1B,OAAO,CAACP,WAAW,CAACI,OAAO,CAAE;QACnC8B,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAC,KAAK;QACjBC,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAAC,SAAS,CAAE;QAC1Cc,SAAS,EAAC;MAAkB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAGF7C,OAAA;QACEqC,CAAC,EAAEN,KAAK,CAACrB,MAAO;QAChB4B,IAAI,EAAE1B,OAAO,CAACP,WAAW,CAACK,MAAM,CAAE;QAClC6B,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAC,KAAK;QACjBC,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAAC,QAAQ,CAAE;QACzCc,SAAS,EAAC;MAAkB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAGF7C,OAAA;QACEqC,CAAC,EAAEN,KAAK,CAACpB,MAAO;QAChB2B,IAAI,EAAE1B,OAAO,CAACP,WAAW,CAACM,MAAM,CAAE;QAClC4B,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAC,KAAK;QACjBC,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAAC,QAAQ,CAAE;QACzCc,SAAS,EAAC;MAAkB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7C,OAAA;MAAMgC,SAAS,EAAC,wCAAwC;MAAAC,QAAA,EAAE/B;IAAM;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV,CAAC;AAACzC,EAAA,CA3JIH,SAAS;AAAA6C,EAAA,GAAT7C,SAAS;AA6Jf,eAAeA,SAAS;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}