{"ast":null,"code":"import axios from 'axios';\nimport { buildApiUrl, getAuthHeaders, API_CONFIG } from '../config/api';\n\n// Crear instancia de axios con configuración base\nconst apiClient = axios.create({\n  baseURL: `${API_CONFIG.BASE_URL}/api/${API_CONFIG.VERSION}`,\n  timeout: API_CONFIG.TIMEOUT,\n  headers: API_CONFIG.DEFAULT_HEADERS\n});\n\n// Interceptor para agregar token de autenticación automáticamente\napiClient.interceptors.request.use(config => {\n  var _config$method;\n  console.log('Enviando petición:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url);\n  console.log('Base URL:', config.baseURL);\n  console.log('Headers:', config.headers);\n  console.log('Data:', config.data);\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Error en interceptor de request:', error);\n  return Promise.reject(error);\n});\n\n// Interceptor para manejar respuestas y errores\napiClient.interceptors.response.use(response => {\n  console.log('Respuesta exitosa:', response.config.url, response.status);\n  return response;\n}, error => {\n  var _error$config, _error$response;\n  console.error('Error en petición:', (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url, error.message);\n  console.error('Detalles del error:', error);\n\n  // Si el token expiró, redirigir al login\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('doctocliq_user');\n    window.location.href = '/login';\n  }\n\n  // Manejar errores de red\n  if (!error.response) {\n    console.error('Error de red:', error.message);\n    console.error('Posible problema de CORS o backend no disponible');\n  }\n  return Promise.reject(error);\n});\n\n// Funciones de utilidad para diferentes tipos de peticiones\nexport const apiRequest = {\n  // GET request\n  get: async (endpoint, params = {}) => {\n    try {\n      const response = await apiClient.get(endpoint, {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // POST request\n  post: async (endpoint, data = {}) => {\n    try {\n      const response = await apiClient.post(endpoint, data);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // PUT request\n  put: async (endpoint, data = {}) => {\n    try {\n      const response = await apiClient.put(endpoint, data);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // PATCH request\n  patch: async (endpoint, data = {}) => {\n    try {\n      const response = await apiClient.patch(endpoint, data);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // DELETE request\n  delete: async endpoint => {\n    try {\n      const response = await apiClient.delete(endpoint);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\nexport default apiClient;","map":{"version":3,"names":["axios","buildApiUrl","getAuthHeaders","API_CONFIG","apiClient","create","baseURL","BASE_URL","VERSION","timeout","TIMEOUT","headers","DEFAULT_HEADERS","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","data","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","_error$config","_error$response","message","removeItem","window","location","href","apiRequest","get","endpoint","params","post","put","patch","delete"],"sources":["C:/Users/Usuario/Documents/GitHub/SISTEMA_DOCTOR_CONSULTORIO/src/services/apiClient.js"],"sourcesContent":["import axios from 'axios';\r\nimport { buildApiUrl, getAuthHeaders, API_CONFIG } from '../config/api';\r\n\r\n// Crear instancia de axios con configuración base\r\nconst apiClient = axios.create({\r\n  baseURL: `${API_CONFIG.BASE_URL}/api/${API_CONFIG.VERSION}`,\r\n  timeout: API_CONFIG.TIMEOUT,\r\n  headers: API_CONFIG.DEFAULT_HEADERS\r\n});\r\n\r\n// Interceptor para agregar token de autenticación automáticamente\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    console.log('Enviando petición:', config.method?.toUpperCase(), config.url);\r\n    console.log('Base URL:', config.baseURL);\r\n    console.log('Headers:', config.headers);\r\n    console.log('Data:', config.data);\r\n    \r\n    const token = localStorage.getItem('auth_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Error en interceptor de request:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Interceptor para manejar respuestas y errores\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Respuesta exitosa:', response.config.url, response.status);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Error en petición:', error.config?.url, error.message);\r\n    console.error('Detalles del error:', error);\r\n    \r\n    // Si el token expiró, redirigir al login\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('auth_token');\r\n      localStorage.removeItem('doctocliq_user');\r\n      window.location.href = '/login';\r\n    }\r\n    \r\n    // Manejar errores de red\r\n    if (!error.response) {\r\n      console.error('Error de red:', error.message);\r\n      console.error('Posible problema de CORS o backend no disponible');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Funciones de utilidad para diferentes tipos de peticiones\r\nexport const apiRequest = {\r\n  // GET request\r\n  get: async (endpoint, params = {}) => {\r\n    try {\r\n      const response = await apiClient.get(endpoint, { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // POST request\r\n  post: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiClient.post(endpoint, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // PUT request\r\n  put: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiClient.put(endpoint, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // PATCH request\r\n  patch: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiClient.patch(endpoint, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // DELETE request\r\n  delete: async (endpoint) => {\r\n    try {\r\n      const response = await apiClient.delete(endpoint);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiClient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}