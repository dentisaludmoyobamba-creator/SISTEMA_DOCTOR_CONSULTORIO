{"ast":null,"code":"import { apiRequest } from './apiClient';\nimport { API_CONFIG } from '../config/api';\nexport const patientsService = {\n  // Obtener todos los pacientes\n  getPatients: async (params = {}) => {\n    try {\n      const response = await apiRequest.get(API_CONFIG.ENDPOINTS.PATIENTS, params);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Obtener un paciente por ID\n  getPatientById: async id => {\n    try {\n      const response = await apiRequest.get(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}`);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Crear un nuevo paciente\n  createPatient: async patientData => {\n    try {\n      const response = await apiRequest.post(API_CONFIG.ENDPOINTS.PATIENTS, patientData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Actualizar un paciente\n  updatePatient: async (id, patientData) => {\n    try {\n      const response = await apiRequest.put(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}`, patientData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Eliminar un paciente\n  deletePatient: async id => {\n    try {\n      const response = await apiRequest.delete(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}`);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Buscar pacientes\n  searchPatients: async query => {\n    try {\n      const response = await apiRequest.get(`${API_CONFIG.ENDPOINTS.PATIENTS}/search`, {\n        q: query\n      });\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Obtener historial médico de un paciente\n  getPatientHistory: async id => {\n    try {\n      const response = await apiRequest.get(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}/history`);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Obtener próximas citas de un paciente\n  getPatientUpcomingAppointments: async id => {\n    try {\n      const response = await apiRequest.get(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}/appointments`);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["apiRequest","API_CONFIG","patientsService","getPatients","params","response","get","ENDPOINTS","PATIENTS","error","getPatientById","id","createPatient","patientData","post","updatePatient","put","deletePatient","delete","searchPatients","query","q","getPatientHistory","getPatientUpcomingAppointments"],"sources":["C:/Users/Usuario/Documents/GitHub/SISTEMA_DOCTOR_CONSULTORIO/src/services/patientsService.js"],"sourcesContent":["import { apiRequest } from './apiClient';\r\nimport { API_CONFIG } from '../config/api';\r\n\r\nexport const patientsService = {\r\n  // Obtener todos los pacientes\r\n  getPatients: async (params = {}) => {\r\n    try {\r\n      const response = await apiRequest.get(API_CONFIG.ENDPOINTS.PATIENTS, params);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener un paciente por ID\r\n  getPatientById: async (id) => {\r\n    try {\r\n      const response = await apiRequest.get(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}`);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Crear un nuevo paciente\r\n  createPatient: async (patientData) => {\r\n    try {\r\n      const response = await apiRequest.post(API_CONFIG.ENDPOINTS.PATIENTS, patientData);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Actualizar un paciente\r\n  updatePatient: async (id, patientData) => {\r\n    try {\r\n      const response = await apiRequest.put(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}`, patientData);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Eliminar un paciente\r\n  deletePatient: async (id) => {\r\n    try {\r\n      const response = await apiRequest.delete(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}`);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Buscar pacientes\r\n  searchPatients: async (query) => {\r\n    try {\r\n      const response = await apiRequest.get(`${API_CONFIG.ENDPOINTS.PATIENTS}/search`, {\r\n        q: query\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener historial médico de un paciente\r\n  getPatientHistory: async (id) => {\r\n    try {\r\n      const response = await apiRequest.get(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}/history`);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener próximas citas de un paciente\r\n  getPatientUpcomingAppointments: async (id) => {\r\n    try {\r\n      const response = await apiRequest.get(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}/appointments`);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,aAAa;AACxC,SAASC,UAAU,QAAQ,eAAe;AAE1C,OAAO,MAAMC,eAAe,GAAG;EAC7B;EACAC,WAAW,EAAE,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,UAAU,CAACM,GAAG,CAACL,UAAU,CAACM,SAAS,CAACC,QAAQ,EAAEJ,MAAM,CAAC;MAC5E,OAAOC,QAAQ;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAC,cAAc,EAAE,MAAOC,EAAE,IAAK;IAC5B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAML,UAAU,CAACM,GAAG,CAAC,GAAGL,UAAU,CAACM,SAAS,CAACC,QAAQ,IAAIG,EAAE,EAAE,CAAC;MAC/E,OAAON,QAAQ;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAG,aAAa,EAAE,MAAOC,WAAW,IAAK;IACpC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAML,UAAU,CAACc,IAAI,CAACb,UAAU,CAACM,SAAS,CAACC,QAAQ,EAAEK,WAAW,CAAC;MAClF,OAAOR,QAAQ;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAM,aAAa,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,WAAW,KAAK;IACxC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAML,UAAU,CAACgB,GAAG,CAAC,GAAGf,UAAU,CAACM,SAAS,CAACC,QAAQ,IAAIG,EAAE,EAAE,EAAEE,WAAW,CAAC;MAC5F,OAAOR,QAAQ;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAQ,aAAa,EAAE,MAAON,EAAE,IAAK;IAC3B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAML,UAAU,CAACkB,MAAM,CAAC,GAAGjB,UAAU,CAACM,SAAS,CAACC,QAAQ,IAAIG,EAAE,EAAE,CAAC;MAClF,OAAON,QAAQ;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAU,cAAc,EAAE,MAAOC,KAAK,IAAK;IAC/B,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAML,UAAU,CAACM,GAAG,CAAC,GAAGL,UAAU,CAACM,SAAS,CAACC,QAAQ,SAAS,EAAE;QAC/Ea,CAAC,EAAED;MACL,CAAC,CAAC;MACF,OAAOf,QAAQ;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAa,iBAAiB,EAAE,MAAOX,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAML,UAAU,CAACM,GAAG,CAAC,GAAGL,UAAU,CAACM,SAAS,CAACC,QAAQ,IAAIG,EAAE,UAAU,CAAC;MACvF,OAAON,QAAQ;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAc,8BAA8B,EAAE,MAAOZ,EAAE,IAAK;IAC5C,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAML,UAAU,CAACM,GAAG,CAAC,GAAGL,UAAU,CAACM,SAAS,CAACC,QAAQ,IAAIG,EAAE,eAAe,CAAC;MAC5F,OAAON,QAAQ;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}