{"ast":null,"code":"import{apiRequest}from'./apiClient';import{API_CONFIG}from'../config/api';export const authService={// Iniciar sesión\nlogin:async credentials=>{try{const response=await apiRequest.post(API_CONFIG.ENDPOINTS.AUTH.LOGIN,credentials);// Guardar token en localStorage\nif(response.access_token){localStorage.setItem('auth_token',response.access_token);}return response;}catch(error){throw error;}},// Cerrar sesión\nlogout:async()=>{try{await apiRequest.post(API_CONFIG.ENDPOINTS.AUTH.LOGOUT);}catch(error){console.error('Error al cerrar sesión:',error);}finally{// Limpiar datos locales independientemente del resultado\nlocalStorage.removeItem('auth_token');localStorage.removeItem('doctocliq_user');}},// Obtener perfil del usuario\ngetProfile:async()=>{try{const response=await apiRequest.get(API_CONFIG.ENDPOINTS.AUTH.PROFILE);return response;}catch(error){throw error;}},// Refrescar token\nrefreshToken:async()=>{try{const response=await apiRequest.post(API_CONFIG.ENDPOINTS.AUTH.REFRESH);if(response.access_token){localStorage.setItem('auth_token',response.access_token);}return response;}catch(error){throw error;}},// Verificar si el usuario está autenticado\nisAuthenticated:()=>{const token=localStorage.getItem('auth_token');return!!token;},// Obtener token actual\ngetToken:()=>{return localStorage.getItem('auth_token');}};","map":{"version":3,"names":["apiRequest","API_CONFIG","authService","login","credentials","response","post","ENDPOINTS","AUTH","LOGIN","access_token","localStorage","setItem","error","logout","LOGOUT","console","removeItem","getProfile","get","PROFILE","refreshToken","REFRESH","isAuthenticated","token","getItem","getToken"],"sources":["C:/Users/Usuario/Documents/GitHub/SISTEMA_DOCTOR_CONSULTORIO/src/services/authService.js"],"sourcesContent":["import { apiRequest } from './apiClient';\r\nimport { API_CONFIG } from '../config/api';\r\n\r\nexport const authService = {\r\n  // Iniciar sesión\r\n  login: async (credentials) => {\r\n    try {\r\n      const response = await apiRequest.post(API_CONFIG.ENDPOINTS.AUTH.LOGIN, credentials);\r\n      \r\n      // Guardar token en localStorage\r\n      if (response.access_token) {\r\n        localStorage.setItem('auth_token', response.access_token);\r\n      }\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Cerrar sesión\r\n  logout: async () => {\r\n    try {\r\n      await apiRequest.post(API_CONFIG.ENDPOINTS.AUTH.LOGOUT);\r\n    } catch (error) {\r\n      console.error('Error al cerrar sesión:', error);\r\n    } finally {\r\n      // Limpiar datos locales independientemente del resultado\r\n      localStorage.removeItem('auth_token');\r\n      localStorage.removeItem('doctocliq_user');\r\n    }\r\n  },\r\n\r\n  // Obtener perfil del usuario\r\n  getProfile: async () => {\r\n    try {\r\n      const response = await apiRequest.get(API_CONFIG.ENDPOINTS.AUTH.PROFILE);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Refrescar token\r\n  refreshToken: async () => {\r\n    try {\r\n      const response = await apiRequest.post(API_CONFIG.ENDPOINTS.AUTH.REFRESH);\r\n      \r\n      if (response.access_token) {\r\n        localStorage.setItem('auth_token', response.access_token);\r\n      }\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Verificar si el usuario está autenticado\r\n  isAuthenticated: () => {\r\n    const token = localStorage.getItem('auth_token');\r\n    return !!token;\r\n  },\r\n\r\n  // Obtener token actual\r\n  getToken: () => {\r\n    return localStorage.getItem('auth_token');\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,aAAa,CACxC,OAASC,UAAU,KAAQ,eAAe,CAE1C,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzB;AACAC,KAAK,CAAE,KAAO,CAAAC,WAAW,EAAK,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,UAAU,CAACM,IAAI,CAACL,UAAU,CAACM,SAAS,CAACC,IAAI,CAACC,KAAK,CAAEL,WAAW,CAAC,CAEpF;AACA,GAAIC,QAAQ,CAACK,YAAY,CAAE,CACzBC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAEP,QAAQ,CAACK,YAAY,CAAC,CAC3D,CAEA,MAAO,CAAAL,QAAQ,CACjB,CAAE,MAAOQ,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAC,MAAM,CAAE,KAAAA,CAAA,GAAY,CAClB,GAAI,CACF,KAAM,CAAAd,UAAU,CAACM,IAAI,CAACL,UAAU,CAACM,SAAS,CAACC,IAAI,CAACO,MAAM,CAAC,CACzD,CAAE,MAAOF,KAAK,CAAE,CACdG,OAAO,CAACH,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CAAC,OAAS,CACR;AACAF,YAAY,CAACM,UAAU,CAAC,YAAY,CAAC,CACrCN,YAAY,CAACM,UAAU,CAAC,gBAAgB,CAAC,CAC3C,CACF,CAAC,CAED;AACAC,UAAU,CAAE,KAAAA,CAAA,GAAY,CACtB,GAAI,CACF,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAL,UAAU,CAACmB,GAAG,CAAClB,UAAU,CAACM,SAAS,CAACC,IAAI,CAACY,OAAO,CAAC,CACxE,MAAO,CAAAf,QAAQ,CACjB,CAAE,MAAOQ,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAQ,YAAY,CAAE,KAAAA,CAAA,GAAY,CACxB,GAAI,CACF,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAL,UAAU,CAACM,IAAI,CAACL,UAAU,CAACM,SAAS,CAACC,IAAI,CAACc,OAAO,CAAC,CAEzE,GAAIjB,QAAQ,CAACK,YAAY,CAAE,CACzBC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAEP,QAAQ,CAACK,YAAY,CAAC,CAC3D,CAEA,MAAO,CAAAL,QAAQ,CACjB,CAAE,MAAOQ,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAU,eAAe,CAAEA,CAAA,GAAM,CACrB,KAAM,CAAAC,KAAK,CAAGb,YAAY,CAACc,OAAO,CAAC,YAAY,CAAC,CAChD,MAAO,CAAC,CAACD,KAAK,CAChB,CAAC,CAED;AACAE,QAAQ,CAAEA,CAAA,GAAM,CACd,MAAO,CAAAf,YAAY,CAACc,OAAO,CAAC,YAAY,CAAC,CAC3C,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}