{"ast":null,"code":"import{apiRequest}from'./apiClient';import{API_CONFIG}from'../config/api';export const patientsService={// Obtener todos los pacientes\ngetPatients:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await apiRequest.get(API_CONFIG.ENDPOINTS.PATIENTS,params);return response;}catch(error){throw error;}},// Obtener un paciente por ID\ngetPatientById:async id=>{try{const response=await apiRequest.get(\"\".concat(API_CONFIG.ENDPOINTS.PATIENTS,\"/\").concat(id));return response;}catch(error){throw error;}},// Crear un nuevo paciente\ncreatePatient:async patientData=>{try{const response=await apiRequest.post(API_CONFIG.ENDPOINTS.PATIENTS,patientData);return response;}catch(error){throw error;}},// Actualizar un paciente\nupdatePatient:async(id,patientData)=>{try{const response=await apiRequest.put(\"\".concat(API_CONFIG.ENDPOINTS.PATIENTS,\"/\").concat(id),patientData);return response;}catch(error){throw error;}},// Eliminar un paciente\ndeletePatient:async id=>{try{const response=await apiRequest.delete(\"\".concat(API_CONFIG.ENDPOINTS.PATIENTS,\"/\").concat(id));return response;}catch(error){throw error;}},// Buscar pacientes\nsearchPatients:async query=>{try{const response=await apiRequest.get(\"\".concat(API_CONFIG.ENDPOINTS.PATIENTS,\"/search\"),{q:query});return response;}catch(error){throw error;}},// Obtener historial médico de un paciente\ngetPatientHistory:async id=>{try{const response=await apiRequest.get(\"\".concat(API_CONFIG.ENDPOINTS.PATIENTS,\"/\").concat(id,\"/history\"));return response;}catch(error){throw error;}},// Obtener próximas citas de un paciente\ngetPatientUpcomingAppointments:async id=>{try{const response=await apiRequest.get(\"\".concat(API_CONFIG.ENDPOINTS.PATIENTS,\"/\").concat(id,\"/appointments\"));return response;}catch(error){throw error;}}};","map":{"version":3,"names":["apiRequest","API_CONFIG","patientsService","getPatients","params","arguments","length","undefined","response","get","ENDPOINTS","PATIENTS","error","getPatientById","id","concat","createPatient","patientData","post","updatePatient","put","deletePatient","delete","searchPatients","query","q","getPatientHistory","getPatientUpcomingAppointments"],"sources":["C:/Users/Usuario/Documents/GitHub/SISTEMA_DOCTOR_CONSULTORIO/src/services/patientsService.js"],"sourcesContent":["import { apiRequest } from './apiClient';\r\nimport { API_CONFIG } from '../config/api';\r\n\r\nexport const patientsService = {\r\n  // Obtener todos los pacientes\r\n  getPatients: async (params = {}) => {\r\n    try {\r\n      const response = await apiRequest.get(API_CONFIG.ENDPOINTS.PATIENTS, params);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener un paciente por ID\r\n  getPatientById: async (id) => {\r\n    try {\r\n      const response = await apiRequest.get(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}`);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Crear un nuevo paciente\r\n  createPatient: async (patientData) => {\r\n    try {\r\n      const response = await apiRequest.post(API_CONFIG.ENDPOINTS.PATIENTS, patientData);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Actualizar un paciente\r\n  updatePatient: async (id, patientData) => {\r\n    try {\r\n      const response = await apiRequest.put(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}`, patientData);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Eliminar un paciente\r\n  deletePatient: async (id) => {\r\n    try {\r\n      const response = await apiRequest.delete(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}`);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Buscar pacientes\r\n  searchPatients: async (query) => {\r\n    try {\r\n      const response = await apiRequest.get(`${API_CONFIG.ENDPOINTS.PATIENTS}/search`, {\r\n        q: query\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener historial médico de un paciente\r\n  getPatientHistory: async (id) => {\r\n    try {\r\n      const response = await apiRequest.get(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}/history`);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener próximas citas de un paciente\r\n  getPatientUpcomingAppointments: async (id) => {\r\n    try {\r\n      const response = await apiRequest.get(`${API_CONFIG.ENDPOINTS.PATIENTS}/${id}/appointments`);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}