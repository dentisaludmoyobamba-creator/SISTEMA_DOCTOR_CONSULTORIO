{"ast":null,"code":"import axios from'axios';import{buildApiUrl,getAuthHeaders,API_CONFIG}from'../config/api';// Crear instancia de axios con configuración base\nconst apiClient=axios.create({baseURL:\"\".concat(API_CONFIG.BASE_URL,\"/api/\").concat(API_CONFIG.VERSION),timeout:API_CONFIG.TIMEOUT,headers:API_CONFIG.DEFAULT_HEADERS});// Interceptor para agregar token de autenticación automáticamente\napiClient.interceptors.request.use(config=>{const token=localStorage.getItem('auth_token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Interceptor para manejar respuestas y errores\napiClient.interceptors.response.use(response=>{return response;},error=>{var _error$response;// Si el token expiró, redirigir al login\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('auth_token');localStorage.removeItem('doctocliq_user');window.location.href='/login';}// Manejar errores de red\nif(!error.response){console.error('Error de red:',error.message);}return Promise.reject(error);});// Funciones de utilidad para diferentes tipos de peticiones\nexport const apiRequest={// GET request\nget:async function(endpoint){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await apiClient.get(endpoint,{params});return response.data;}catch(error){throw error;}},// POST request\npost:async function(endpoint){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await apiClient.post(endpoint,data);return response.data;}catch(error){throw error;}},// PUT request\nput:async function(endpoint){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await apiClient.put(endpoint,data);return response.data;}catch(error){throw error;}},// PATCH request\npatch:async function(endpoint){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await apiClient.patch(endpoint,data);return response.data;}catch(error){throw error;}},// DELETE request\ndelete:async endpoint=>{try{const response=await apiClient.delete(endpoint);return response.data;}catch(error){throw error;}}};export default apiClient;","map":{"version":3,"names":["axios","buildApiUrl","getAuthHeaders","API_CONFIG","apiClient","create","baseURL","concat","BASE_URL","VERSION","timeout","TIMEOUT","headers","DEFAULT_HEADERS","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","console","message","apiRequest","get","endpoint","params","arguments","length","undefined","data","post","put","patch","delete"],"sources":["C:/Users/Usuario/Documents/GitHub/SISTEMA_DOCTOR_CONSULTORIO/src/services/apiClient.js"],"sourcesContent":["import axios from 'axios';\r\nimport { buildApiUrl, getAuthHeaders, API_CONFIG } from '../config/api';\r\n\r\n// Crear instancia de axios con configuración base\r\nconst apiClient = axios.create({\r\n  baseURL: `${API_CONFIG.BASE_URL}/api/${API_CONFIG.VERSION}`,\r\n  timeout: API_CONFIG.TIMEOUT,\r\n  headers: API_CONFIG.DEFAULT_HEADERS\r\n});\r\n\r\n// Interceptor para agregar token de autenticación automáticamente\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('auth_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Interceptor para manejar respuestas y errores\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Si el token expiró, redirigir al login\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('auth_token');\r\n      localStorage.removeItem('doctocliq_user');\r\n      window.location.href = '/login';\r\n    }\r\n    \r\n    // Manejar errores de red\r\n    if (!error.response) {\r\n      console.error('Error de red:', error.message);\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Funciones de utilidad para diferentes tipos de peticiones\r\nexport const apiRequest = {\r\n  // GET request\r\n  get: async (endpoint, params = {}) => {\r\n    try {\r\n      const response = await apiClient.get(endpoint, { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // POST request\r\n  post: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiClient.post(endpoint, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // PUT request\r\n  put: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiClient.put(endpoint, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // PATCH request\r\n  patch: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiClient.patch(endpoint, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // DELETE request\r\n  delete: async (endpoint) => {\r\n    try {\r\n      const response = await apiClient.delete(endpoint);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiClient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}